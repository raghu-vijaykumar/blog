<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Raghu Vijaykumar</title>
    <link>https://raghu-vijaykumar.github.io/blog/posts/</link>
    <description>Recent content in Posts on Raghu Vijaykumar</description>
    <image>
      <title>Raghu Vijaykumar</title>
      <url>https://raghu-vijaykumar.github.io/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://raghu-vijaykumar.github.io/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.127.0</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jul 2024 10:06:10 +0100</lastBuildDate>
    <atom:link href="https://raghu-vijaykumar.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building Batch Pipelines on Google Cloud Platform</title>
      <link>https://raghu-vijaykumar.github.io/blog/posts/courses/building-batch-data-pipelines-gcp/</link>
      <pubDate>Wed, 03 Jul 2024 10:06:10 +0100</pubDate>
      <guid>https://raghu-vijaykumar.github.io/blog/posts/courses/building-batch-data-pipelines-gcp/</guid>
      <description>Introduction to Building Batch Data Pipelines Batch Pipelines Overview Definition: Pipelines that process a fixed amount of data and terminate.
Example: Daily processing of financial transactions to balance books and store reconciled data. ETL vs ELT:
ELT (Extract, Load, Transform):
Load raw data into a target system and perform transformations on the fly as needed. Suitable when transformations depend on user needs or view requirements (e.g., raw data accessible through views).</description>
    </item>
    <item>
      <title>DSA - Sliding Window - (In Progress)</title>
      <link>https://raghu-vijaykumar.github.io/blog/posts/dsa/sliding-window/</link>
      <pubDate>Thu, 27 Jun 2024 10:06:10 +0100</pubDate>
      <guid>https://raghu-vijaykumar.github.io/blog/posts/dsa/sliding-window/</guid>
      <description>The sliding window technique is a powerful approach used to solve a variety of problems, especially those involving subarrays or substrings. Here are the key characteristics and criteria to identify if a problem can be effectively solved using the sliding window technique:
Characteristics of Sliding Window Problems Contiguous Subarrays or Subsequences:
The problem involves finding a subarray or substring with certain properties, such as a fixed length or a sum within a range.</description>
    </item>
    <item>
      <title>DSA - Two Pointer Approach - (In Progress)</title>
      <link>https://raghu-vijaykumar.github.io/blog/posts/dsa/two-pointer/</link>
      <pubDate>Thu, 27 Jun 2024 10:06:10 +0100</pubDate>
      <guid>https://raghu-vijaykumar.github.io/blog/posts/dsa/two-pointer/</guid>
      <description>The two-pointer approach is a powerful technique used to solve problems involving arrays or strings. Here are the key characteristics and criteria to identify if a problem can be effectively solved using the two-pointer approach:
Characteristics of Two-Pointer Problems Sorted Input:
The input array is sorted or can be easily sorted. Sorting often simplifies the problem and makes the two-pointer technique applicable. Finding Pairs or Subarrays:
The problem involves finding pairs, triplets, or subarrays that satisfy specific conditions, such as a target sum.</description>
    </item>
    <item>
      <title>Product Template - Documentation</title>
      <link>https://raghu-vijaykumar.github.io/blog/posts/architecture/product-template/</link>
      <pubDate>Tue, 25 Jun 2024 10:06:10 +0100</pubDate>
      <guid>https://raghu-vijaykumar.github.io/blog/posts/architecture/product-template/</guid>
      <description>Tech Product Documentation Template serves as a comprehensive framework for organizing and communicating essential information about a technology product. It provides a structured approach to capturing the product&amp;rsquo;s purpose, functionality, technical specifications, and operational requirements. This documentation not only outlines how the product works but also guides users on its installation, configuration, and usage.
By detailing everything from system requirements and architecture to deployment procedures and support channels, this template ensures that stakeholders from developers and IT teams to end-users and managers have a clear understanding of the product&amp;rsquo;s capabilities and how to interact with it effectively.</description>
    </item>
    <item>
      <title>Ensuring Resiliency: High Availability and Disaster Recovery Strategies</title>
      <link>https://raghu-vijaykumar.github.io/blog/posts/architecture/how-to-ha-and-dr/</link>
      <pubDate>Wed, 12 Jun 2024 10:06:10 +0100</pubDate>
      <guid>https://raghu-vijaykumar.github.io/blog/posts/architecture/how-to-ha-and-dr/</guid>
      <description>High Availability (HA) and Disaster Recovery (DR) are critical strategies in cloud computing to ensure services are continuously available and resilient against failures.
Designing HA &amp;amp; DR Most of the services can be differentiated as compute and storage; these are the two key components when building resilient software architectures. Here is a generic diagram for HA and DR.
HA Key Components Auto-Scaling: Adjusts the number of instances based on traffic demands.</description>
    </item>
    <item>
      <title>Enterprise Product - Things to consider</title>
      <link>https://raghu-vijaykumar.github.io/blog/posts/architecture/enterprise-product/</link>
      <pubDate>Wed, 12 Jun 2024 10:06:10 +0100</pubDate>
      <guid>https://raghu-vijaykumar.github.io/blog/posts/architecture/enterprise-product/</guid>
      <description>Developing an enterprise product is a complex endeavour that demands meticulous planning and execution. Here&amp;rsquo;s a comprehensive checklist that can serve as your roadmap to success. Whether you&amp;rsquo;re launching a web server or a multifaceted application, these steps are critical for ensuring business continuity
Business Case Business Need is defined Product architecture and high level technical architecture is determined High-level technical plan is devised Estimated Budgets allocated Migration strategy, if applicable, is established Service Delivery Procedures are determined Necessary resources assigned Definite Commitment to technical and security standards established.</description>
    </item>
    <item>
      <title>Using Ollama for Note Generation Locally</title>
      <link>https://raghu-vijaykumar.github.io/blog/posts/data-science/ollama-note-generation/</link>
      <pubDate>Wed, 12 Jun 2024 09:56:00 +0100</pubDate>
      <guid>https://raghu-vijaykumar.github.io/blog/posts/data-science/ollama-note-generation/</guid>
      <description>Desc Text.</description>
    </item>
  </channel>
</rss>
