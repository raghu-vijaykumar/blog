<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Singleton on Raghu Vijaykumar</title>
    <link>https://raghu-vijaykumar.github.io/blog/tags/singleton/</link>
    <description>Recent content in Singleton on Raghu Vijaykumar</description>
    <image>
      <title>Raghu Vijaykumar</title>
      <url>https://raghu-vijaykumar.github.io/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://raghu-vijaykumar.github.io/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.127.0</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Aug 2024 00:01:00 +0530</lastBuildDate>
    <atom:link href="https://raghu-vijaykumar.github.io/blog/tags/singleton/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Singleton Pattern</title>
      <link>https://raghu-vijaykumar.github.io/blog/docs/system-design/design-patterns/singleton/readme/</link>
      <pubDate>Mon, 26 Aug 2024 00:01:00 +0530</pubDate>
      <guid>https://raghu-vijaykumar.github.io/blog/docs/system-design/design-patterns/singleton/readme/</guid>
      <description>The singleton design pattern ensures that a class has only one instance and provides a global point of access to that instance. This pattern is often used when exactly one object is needed to coordinate actions across the system, such as when managing shared resources like databases or configuration settings.
Motivation The singleton pattern is motivated by scenarios where certain classes should only be instantiated once. Common examples include:
Database Connections: You typically only want one instance of a database connection throughout the lifecycle of an application to avoid redundant connections and ensure consistent access to the data.</description>
    </item>
  </channel>
</rss>
